#include <Servo.h>

#define IR_SENSOR A1  // IR Sensor at 12 o'clock

// Ultrasonic Sensors
#define Trig_Pin1 11  // Left sensor (10 o'clock)
#define Echo_Pin1 10
#define Trig_Pin2 8   // Right sensor (2 o'clock)
#define Echo_Pin2 7 

// Motor Driver Pins
#define L_motor_fw_pin 5
#define L_motor_bw_pin 3
#define R_motor_fw_pin 6
#define R_motor_bw_pin 9

Servo clawServo;  // Servo for claw

// Function to get distance from ultrasonic sensor
int getDistance(int trigPin, int echoPin) {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    long duration = pulseIn(echoPin, HIGH);
    return duration / 58;  // Convert to cm
}

// Function to move forward
void fw_Max_V() {
    analogWrite(L_motor_fw_pin, 104);
    analogWrite(R_motor_fw_pin, 140);
    digitalWrite(L_motor_bw_pin, LOW);
    digitalWrite(R_motor_bw_pin, LOW);
}

// Function to move backward
void bw_Max_V(int delay_time) {
    digitalWrite(L_motor_fw_pin, LOW);
    digitalWrite(R_motor_fw_pin, LOW);
    digitalWrite(L_motor_bw_pin, HIGH);
    digitalWrite(R_motor_bw_pin, HIGH);
    delay(delay_time);
}

// Function to stop
void stopBot(int delay_time) {
    digitalWrite(L_motor_fw_pin, LOW);
    digitalWrite(R_motor_fw_pin, LOW);
    digitalWrite(L_motor_bw_pin, LOW);
    digitalWrite(R_motor_bw_pin, LOW);
    delay(delay_time);
}

// Function to turn left
void turn_L(int delay_time) {
    digitalWrite(L_motor_fw_pin, LOW);
    analogWrite(R_motor_fw_pin, 160);
    analogWrite(L_motor_bw_pin, 120);
    digitalWrite(R_motor_bw_pin, LOW);
    delay(delay_time);
}

// Function to turn right
void turn_R(int delay_time) {
    analogWrite(L_motor_fw_pin, 160);
    digitalWrite(R_motor_fw_pin, LOW);
    digitalWrite(L_motor_bw_pin, LOW);
    analogWrite(R_motor_bw_pin, 120);
    delay(delay_time);
}

void setup() {
    Serial.begin(9600);
    clawServo.attach(2); // Servo for claw

    pinMode(IR_SENSOR, INPUT);

    pinMode(Trig_Pin1, OUTPUT);
    pinMode(Echo_Pin1, INPUT);
    pinMode(Trig_Pin2, OUTPUT);
    pinMode(Echo_Pin2, INPUT);
    
    pinMode(L_motor_fw_pin, OUTPUT);
    pinMode(R_motor_fw_pin, OUTPUT);
    pinMode(L_motor_bw_pin, OUTPUT);
    pinMode(R_motor_bw_pin, OUTPUT);

    clawServo.write(70);  // Claw open position at start
}

void loop() {
    int irSensorValue = digitalRead(IR_SENSOR);
    int distance1 = getDistance(Trig_Pin1, Echo_Pin1);  // Left sensor
    int distance2 = getDistance(Trig_Pin2, Echo_Pin2);  // Right sensor

    Serial.print("IR Sensor: ");
    Serial.print(irSensorValue);
    Serial.print(" | Left Ultrasonic: ");
    Serial.print(distance1);
    Serial.print(" cm | Right Ultrasonic: ");
    Serial.println(distance2);

    if (irSensorValue == LOW) {  // IR sensor detects an obstacle
        stopBot(500);
        Serial.println("Obstacle detected at 12 o'clock! Attempting to pick up...");
        clawServo.write(20);  // Close claw
        delay(1000);
        bw_Max_V(1000);  // Move back after picking up
        turn_L(500);
        fw_Max_V();
    }
    else if (distance1 < 30 && distance2 < 30) {  // Both side sensors detect obstacles
        bw_Max_V(500);
        turn_L(500);
        fw_Max_V();
    } 
    else if (distance1 < 30) {  // Left sensor detects obstacle
        bw_Max_V(200);
        turn_R(300);
        fw_Max_V();
    } 
    else if (distance2 < 30) {  // Right sensor detects obstacle
        bw_Max_V(200);
        turn_L(300);
        fw_Max_V();
    } 
    else {  // No obstacles
        fw_Max_V();
    }

    delay(200);
}
